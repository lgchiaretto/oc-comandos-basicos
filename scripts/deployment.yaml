apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "32"
    description: My app
    image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"httpd:latest","namespace":"openshift"},"fieldPath":"spec.template.spec.containers[?(@.name==\"httpd\")].image"}]'
    openshift.io/generated-by: OpenShiftNewApp
  creationTimestamp: "2025-10-25T22:03:02Z"
  generation: 41
  labels:
    app: test-app
    app.kubernetes.io/component: test-app
    app.kubernetes.io/instance: test-app
    env: production
  name: test-app
  namespace: development
  resourceVersion: "308784"
  uid: 55a4bddf-3628-4406-bc76-a48065cf9ae0
spec:
  progressDeadlineSeconds: 600
  replicas: 5
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      deployment: test-app
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        openshift.io/generated-by: OpenShiftNewApp
      creationTimestamp: null
      labels:
        deployment: test-app
    spec:
      containers:
      - env:
        - name: DATABASE_HOST
          valueFrom:
            configMapKeyRef:
              key: database.host
              name: test-app
        - name: DATABASE_PORT
          valueFrom:
            configMapKeyRef:
              key: database.port
              name: test-app
        - name: CHAVE
          valueFrom:
            secretKeyRef:
              key: chave
              name: test-app
        - name: minhachave
          value: valor
        - name: KEY1
          value: value1
        - name: KEY2
          value: value2
        image: image-registry.openshift-image-registry.svc:5000/openshift/httpd@sha256:59cbb73918a853486b35817d289d0befdabc7615f91b9819bb4f92902451094a
        imagePullPolicy: IfNotPresent
        name: httpd
        ports:
        - containerPort: 8080
          protocol: TCP
        - containerPort: 8443
          protocol: TCP
        resources:
          limits:
            cpu: "1"
            memory: 1Gi
          requests:
            cpu: 100m
            memory: 128Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /config
          name: volume-klwr2
        - mountPath: /test-app-secret
          name: volume-rnvj4
        - mountPath: /emptydir
          name: emptydir
        - mountPath: /tmp
          name: tmp-vol
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: test-app
        name: volume-klwr2
      - name: volume-rnvj4
        secret:
          defaultMode: 420
          secretName: test-app
      - emptyDir: {}
        name: emptydir
      - emptyDir: {}
        name: tmp-vol
status:
  availableReplicas: 5
  conditions:
  - lastTransitionTime: "2025-10-25T22:03:21Z"
    lastUpdateTime: "2025-10-25T22:05:24Z"
    message: ReplicaSet "test-app-75d6485574" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  - lastTransitionTime: "2025-10-26T00:04:57Z"
    lastUpdateTime: "2025-10-26T00:04:57Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  observedGeneration: 41
  readyReplicas: 5
  replicas: 5
  updatedReplicas: 5
